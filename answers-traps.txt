Which registers contain arguments to functions? For example, which register holds 13 in main's call to printf?
- a2 stores 13. a0-1 is function arguments/return value. a2-7 is function arguments. 

Where is the call to function f in the assembly code for main? Where is the call to g? (Hint: the compiler may inline functions.)
- nowhere, because the compiler inline functions, and just calculate "f(8)+1" as "li a1,12". 

At what address is the function printf located?
- 0x30+1510 = 0x616

What value is in the register ra just after the jalr to printf in main?
- 0x38?

Run the following code.
	unsigned int i = 0x00646c72;
	printf("H%x Wo%s", 57616, &i);
What is the output? Here's an ASCII table that maps bytes to characters.
The output depends on that fact that the RISC-V is little-endian. If the RISC-V were instead big-endian what would you set i to in order to yield the same output? Would you need to change 57616 to a different value?
- The outout (little endian): HE110 World<NULL>
- Big endian: 0x726c6400. 
- We dont need to change 57616 becuase it is simply a number. 

In the following code, what is going to be printed after 'y='? (note: the answer is not a specific value.) Why does this happen?
	printf("x=%d y=%d", 3);
- a random value that is currently in the a2 register. 
